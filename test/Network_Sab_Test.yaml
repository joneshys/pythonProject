# Author: Juan Villa
# Email: juan.villa@quipux.com
# Services: EC2 VPC
# Since: Sept 30 2019
AWSTemplateFormatVersion: 2010-09-09
# Description
Description: Copyright ? 2019 Quipux. All Rights Reserved - Template used for the creation of a VPC network with 2 private application subnets for specified workload, 2 private database subnets for specified workload, 2 public subnets for specified workload, nat gateways and internet gateway
# Metadata
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: 'General Configuration'
      Parameters:
      - GlobalClient
      - Project
      - GlobalEnviromentType
      - Owner
      - AdminMail
    - Label:
        default: 'VPC Configuration'
      Parameters:
      - VPCMasterCidrBlock
    - Label:
        default: 'Subnets Configurations'
      Parameters:
      - VPCPublicSubnetACidrBlock
      - VPCPublicSubnetBCidrBlock
      - VPCPrivateSubnetACidrBlock
      - VPCPrivateSubnetBCidrBlock
      - VPCPrivateSubnetDBACidrBlock
      - VPCPrivateSubnetDBBCidrBlock
    ParameterLabels:
      GlobalClient:
        default: "Client"
      GlobalEnviromentType:
        default: "Enviroment Type"
      Project:
        default: "Project"
      Owner:
        default: "Owner"
      AdminMail:
        default: "Administrator AWS Email"
      VPCMasterCidrBlock:
        default: "VPC Master ID"
      VPCPublicSubnetACidrBlock:
        default: "ID Public Subnet Availability Zone 1 Specified Workload"
      VPCPublicSubnetBCidrBlock:
        default: "ID Public Subnet Availability Zone 2 Specified Workload"
      VPCPrivateSubnetACidrBlock:
        default: "ID Private Application Subnet Availability Zone 1 Specified Workload"
      VPCPrivateSubnetBCidrBlock:
        default: "ID Private Application Subnet Availability Zone 2 Specified Workload"
      VPCPrivateSubnetDBACidrBlock:
        default: "ID Private Database Subnet Availability Zone 1 Specified Workload"
      VPCPrivateSubnetDBBCidrBlock:
        default: "ID Private Database Subnet Availability Zone 2 Specified Workload"
# Input Parameters
Parameters:
  GlobalEnviromentType:
    Type: String
    AllowedValues: ["Productive Workloads", "Test Workloads", "Development Workloads"]
  GlobalClient:
    Type: String
  AdminMail:
    Type: String
    Default: juan.villa@quipux.com
    AllowedPattern: >-
      ([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)
    ConstraintDescription: Must Be a Valid Email Address
  Project:
    Type: String
  Owner:
    Type: String
    Default: Quipux
  VPCMasterCidrBlock:
    Type: String
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: Must Be a Valid IP Address, Format xxx.xxx.xxx.xxx/xx
  VPCPublicSubnetACidrBlock:
    Type: String
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: Must Be a Valid IP Address, Format xxx.xxx.xxx.xxx/xx
  VPCPublicSubnetBCidrBlock:
    Type: String
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: Must Be a Valid IP Address, Format xxx.xxx.xxx.xxx/xx
  VPCPrivateSubnetACidrBlock:
    Type: String
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: Must Be a Valid IP Address, Format xxx.xxx.xxx.xxx/xx
  VPCPrivateSubnetBCidrBlock:
    Type: String
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: Must Be a Valid IP Address, Format xxx.xxx.xxx.xxx/xx
  VPCPrivateSubnetDBACidrBlock:
    Type: String
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: Must Be a Valid IP Address, Format xxx.xxx.xxx.xxx/xx
  VPCPrivateSubnetDBBCidrBlock:
    Type: String
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: Must Be a Valid IP Address, Format xxx.xxx.xxx.xxx/xx
# Conditions
Conditions:
  ProductionEnviroment: !Equals [!Ref GlobalEnviromentType, "Productive Workloads"]
  TestingEnviroment: !Equals [!Ref GlobalEnviromentType, "Test Workloads"]
  DevelopmentEnviroment: !Equals [!Ref GlobalEnviromentType, "Development Workloads"]
# Resources
Resources:
  # Creation of VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCMasterCidrBlock
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: "Name"
          Value: !Join ["", [ "VPC" , !Ref GlobalClient, !If [ProductionEnviroment, "PROD", !If [TestingEnviroment, "TEST", !If [DevelopmentEnviroment, "DEV", ""]]]]]
        - Key: EnviromentType
          Value: !Ref GlobalEnviromentType
        - Key: Implementor
          Value: !Ref AdminMail
        - Key: Owner
          Value: !Ref Owner
        - Key: Client
          Value: !Ref GlobalClient
        - Key: Project
          Value: !Ref Project
  # Creation of Public Subnet Specified Workload Availability Zone 1
  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 0
        - !GetAZs
          Ref: AWS::Region
      CidrBlock: !Ref VPCPublicSubnetACidrBlock
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: "Public Subnet Specified Workload Availability Zone 1"
      - Key: EnviromentType
        Value: !Ref GlobalEnviromentType
      - Key: Implementor
        Value: !Ref AdminMail
      - Key: Owner
        Value: !Ref Owner
      - Key: Client
        Value: !Ref GlobalClient
      - Key: Project
        Value: !Ref Project
  # Creation of Private Application Subnet Specified Workload Availability Zone 1
  PrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 0
        - !GetAZs
          Ref: AWS::Region
      CidrBlock: !Ref VPCPrivateSubnetACidrBlock
      MapPublicIpOnLaunch: false
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: "Private Application Subnet Specified Workload Availability Zone 1"
      - Key: EnviromentType
        Value: !Ref GlobalEnviromentType
      - Key: Implementor
        Value: !Ref AdminMail
      - Key: Owner
        Value: !Ref Owner
      - Key: Client
        Value: !Ref GlobalClient
      - Key: Project
        Value: !Ref Project
  # Creation of Private Database Subnet Specified Workload Availability Zone 1
  PrivateSubnetDBA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 0
        - !GetAZs
          Ref: AWS::Region
      CidrBlock: !Ref VPCPrivateSubnetDBACidrBlock
      MapPublicIpOnLaunch: false
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: "Private Database Subnet Specified Workload Availability Zone 1"
      - Key: EnviromentType
        Value: !Ref GlobalEnviromentType
      - Key: Implementor
        Value: !Ref AdminMail
      - Key: Owner
        Value: !Ref Owner
      - Key: Client
        Value: !Ref GlobalClient
      - Key: Project
        Value: !Ref Project
  # Creation of Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: "Global Internet Gateway"
        - Key: EnviromentType
          Value: !Ref GlobalEnviromentType
        - Key: Implementor
          Value: !Ref AdminMail
        - Key: Owner
          Value: !Ref Owner
        - Key: Client
          Value: !Ref GlobalClient
        - Key: Project
          Value: !Ref Project
  # Attach Internet Gateway to VPC
  AttachInternetGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
  # Creation of Public Route Table
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: "Public Route Table"
      - Key: EnviromentType
        Value: !Ref GlobalEnviromentType
      - Key: Implementor
        Value: !Ref AdminMail
      - Key: Owner
        Value: !Ref Owner
      - Key: Client
        Value: !Ref GlobalClient
      - Key: Project
        Value: !Ref Project
  # Creation of Default Rule On Public Route Table
  PublicDefaultRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicRouteTable
  # Association Public Subnet Specified Workload Availability Zone 1 With Public Route Table
  PublicRouteAssociationA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnetA
  # Creation of Public Subnet Specified Workload Availability Zone 2
  PublicSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 1
        - !GetAZs
          Ref: AWS::Region
      CidrBlock: !Ref VPCPublicSubnetBCidrBlock
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: "Public Subnet Specified Workload Availability Zone 2"
      - Key: EnviromentType
        Value: !Ref GlobalEnviromentType
      - Key: Implementor
        Value: !Ref AdminMail
      - Key: Owner
        Value: !Ref Owner
      - Key: Client
        Value: !Ref GlobalClient
      - Key: Project
        Value: !Ref Project
  # Creation of Private Application Subnet Specified Workload Availability Zone 2
  PrivateSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 1
        - !GetAZs
          Ref: AWS::Region
      CidrBlock: !Ref VPCPrivateSubnetBCidrBlock
      MapPublicIpOnLaunch: false
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: "Private Application Subnet Specified Workload Availability Zone 2"
      - Key: EnviromentType
        Value: !Ref GlobalEnviromentType
      - Key: Implementor
        Value: !Ref AdminMail
      - Key: Owner
        Value: !Ref Owner
      - Key: Client
        Value: !Ref GlobalClient
      - Key: Project
        Value: !Ref Project
  # Creation of Private Database Subnet Specified Workload Availability Zone 2
  PrivateSubnetDBB:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 1
        - !GetAZs
          Ref: AWS::Region
      CidrBlock: !Ref VPCPrivateSubnetDBBCidrBlock
      MapPublicIpOnLaunch: false
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: "Private Database Subnet Specified Workload Availability Zone 2"
      - Key: EnviromentType
        Value: !Ref GlobalEnviromentType
      - Key: Implementor
        Value: !Ref AdminMail
      - Key: Owner
        Value: !Ref Owner
      - Key: Client
        Value: !Ref GlobalClient
      - Key: Project
        Value: !Ref Project
  # Association Public Subnet Specified Workload Availability Zone 2 With Public Route Table
  PublicRouteAssociationB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnetB
  # Creation of Private Route Table Availability Zone 1
  PrivateRouteTableA:
      Type: AWS::EC2::RouteTable
      Properties:
        VpcId: !Ref VPC
        Tags:
        - Key: Name
          Value: "Private Route Table Availability Zone 1"
        - Key: EnviromentType
          Value: !Ref GlobalEnviromentType
        - Key: Implementor
          Value: !Ref AdminMail
        - Key: Owner
          Value: !Ref Owner
        - Key: Client
          Value: !Ref GlobalClient
        - Key: Project
          Value: !Ref Project
  # Creation of Nat Gateway Availability Zone 1
  NatGatewayA:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
        - ElasticIPNatGatewayA
        - AllocationId
      SubnetId: !Ref PublicSubnetA
      Tags:
        - Key: Name
          Value: "Nat Gateway Availability Zone 1"
        - Key: EnviromentType
          Value: !Ref GlobalEnviromentType
        - Key: Implementor
          Value: !Ref AdminMail
        - Key: Owner
          Value: !Ref Owner
        - Key: Client
          Value: !Ref GlobalClient
        - Key: Project
          Value: !Ref Project
  # Creation Elastic IP Address Nat Gateway Availability Zone 1
  ElasticIPNatGatewayA:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  # Creation of Default Rule On Nat Gateway Availability Zone 1
  PrivateDefaultRouteA:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTableA
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayA
  # Association Private Application Subnet Specified Workload Availability Zone 1 With Private Route Table Availability Zone 1
  PrivateRouteAssociationA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTableA
      SubnetId: !Ref PrivateSubnetA
  # Association Private Application Subnet Specified Workload Availability Zone 1 With Private Route Table Availability Zone 1
  PrivateRouteAssociationDBA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTableA
      SubnetId: !Ref PrivateSubnetDBA
  # Creation Private Route Table Availability Zone 2
  PrivateRouteTableB:
      Type: AWS::EC2::RouteTable
      Properties:
        VpcId: !Ref VPC
        Tags:
        - Key: Name
          Value: "Private Route Table Availability Zone 2"
        - Key: EnviromentType
          Value: !Ref GlobalEnviromentType
        - Key: Implementor
          Value: !Ref AdminMail
        - Key: Owner
          Value: !Ref Owner
        - Key: Client
          Value: !Ref GlobalClient
        - Key: Project
          Value: !Ref Project
  # Creation Nat Gateway Availability Zone 2
  NatGatewayB:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
        - ElasticIPNatGatewayB
        - AllocationId
      SubnetId: !Ref PublicSubnetB
      Tags:
        - Key: Name
          Value: "Nat Gateway Availability Zone 2"
        - Key: EnviromentType
          Value: !Ref GlobalEnviromentType
        - Key: Implementor
          Value: !Ref AdminMail
        - Key: Owner
          Value: !Ref Owner
        - Key: Client
          Value: !Ref GlobalClient
        - Key: Project
          Value: !Ref Project
  # Creation Elastic IP Address Nat Gateway Availability Zone 2
  ElasticIPNatGatewayB:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  PrivateDefaultRouteB:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTableB
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayB
  # Association Private Application Subnet Specified Workload Availability Zone 2 With Private Route Table Availability Zone 2
  PrivateRouteAssociationB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTableB
      SubnetId: !Ref PrivateSubnetB
  # Association Private Database Subnet Specified Workload Availability Zone 2 With Private Route Table Availability Zone 2
  PrivateRouteAssociationDBB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTableB
      SubnetId: !Ref PrivateSubnetDBB
  Route53HostedZone:
    Type: AWS::Route53::HostedZone
    Properties:
      HostedZoneTags:
        - Key: Name
          Value:
            Fn::Transform:
              - Name: String
                Parameters:
                  InputString: "aws"
                  Operation: LowerAccountNameDNS
        - Key: EnviromentType
          Value: !Ref GlobalEnviromentType
        - Key: Implementor
          Value: !Ref AdminMail
        - Key: Owner
          Value: !Ref Owner
        - Key: Client
          Value: !Ref GlobalClient
        - Key: Project
          Value: !Ref Project
      Name:
        Fn::Transform:
          - Name: String
            Parameters:
              InputString: "aws"
              Operation: LowerAccountNameDNS
      VPCs:
        - VPCId: !Ref VPC
          VPCRegion: !Ref AWS::Region
  DHCPOptions:
    Type: AWS::EC2::DHCPOptions
    Properties:
      DomainName:
        Fn::Transform:
          - Name: String
            Parameters:
              InputString: "aws"
              Operation: LowerAccountNameDNS
      DomainNameServers:
        - "AmazonProvidedDNS"
      Tags:
        - Key: Name
          Value: !Join ["", [ "QXDHCP" , !Ref GlobalClient, !If [ProductionEnviroment, "PROD", !If [TestingEnviroment, "TEST", !If [DevelopmentEnviroment, "DEV", ""]]]]]
        - Key: EnviromentType
          Value: !Ref GlobalEnviromentType
        - Key: Implementor
          Value: !Ref AdminMail
        - Key: Owner
          Value: !Ref Owner
        - Key: Client
          Value: !Ref GlobalClient
        - Key: Project
          Value: !Ref Project
  DHCPOptionsAssociation:
    Type: AWS::EC2::VPCDHCPOptionsAssociation
    Properties:
      DhcpOptionsId: !Ref DHCPOptions
      VpcId: !Ref VPC
# Outputs
Outputs:
  VPCID:
    Value: !Ref VPC
    Export:
      Name: !Sub '${AWS::StackName}-VPCID'
  VPCPublicSubnetA:
    Value: !Ref PublicSubnetA
    Export:
      Name: !Sub '${AWS::StackName}-VPCPublicSubnetA'
  VPCPublicSubnetB:
    Value: !Ref PublicSubnetB
    Export:
      Name: !Sub '${AWS::StackName}-VPCPublicSubnetB'
  VPCPrivateSubnetA:
    Value: !Ref PrivateSubnetA
    Export:
      Name: !Sub '${AWS::StackName}-VPCPrivateSubnetA'
  VPCPrivateSubnetB:
    Value: !Ref PrivateSubnetB
    Export:
      Name: !Sub '${AWS::StackName}-VPCPrivateSubnetB'
  VPCPrivateSubnetDBA:
    Value: !Ref PrivateSubnetDBA
    Export:
      Name: !Sub '${AWS::StackName}-VPCPrivateSubnetDBA'
  VPCPrivateSubnetDBB:
    Value: !Ref PrivateSubnetDBB
    Export:
      Name: !Sub '${AWS::StackName}-VPCPrivateSubnetDBB'
  VPCInternetGateway:
    Value: !Ref InternetGateway
    Export:
      Name: !Sub '${AWS::StackName}-VPCInternetGateway'
  Route53HostedZoneId:
    Value: !Ref Route53HostedZone
    Export:
      Name: !Sub '${AWS::StackName}-Route53HostedZoneId'
  Route53HostedZoneName:
    Value:
      Fn::Transform:
        - Name: String
          Parameters:
            InputString: "aws"
            Operation: LowerAccountNameDNS
    Export:
      Name: !Sub '${AWS::StackName}-Route53HostedZoneName'